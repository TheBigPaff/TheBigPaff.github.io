---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import CategoryBtn from "../../components/Posts/Category.astro";
import PostButton from "../../components/Posts/PostButton.astro";
import type { Category } from "../../content/config";
import Layout from "../../layouts/Layout.astro";

interface Props {
    entry?: CollectionEntry<Category>;
}

export async function getStaticPaths() {
    const topCategories: Category[] = ['notes', 'thoughts', 'essays'];
    const fullCategories = new Set<string | undefined>([undefined, ...topCategories]);
    
    const postPaths = await Promise.all(topCategories.map(async category => {
        const entries = await getCollection(category);

        return entries.map(entry => {
            fullCategories.add(entry.data.category);

            return { params: { slug: entry.collection + '/' + entry.slug }, props: { entry } };
        });
    }));
    const categoryPaths = Array.from(fullCategories).map(category => ({ params: { slug: category } }));

    return [...postPaths.flat(), ...categoryPaths];
}

const blogEntry = await Astro.props.entry?.render();

const urlCategory = Astro.params.slug?.split('/')[0];
const posts = urlCategory ? await getCollection(urlCategory as Category, ({ data }) => (data.category === Astro.params.slug)) : [];
---

<Layout title="Blog Posts">
    <div class="min-h-screen">
        <div class="container mx-auto py-12 px-4">
          <div class="grid grid-cols-4 gap-6">
            
            <!-- Categories Section -->
            <div transition:persist class="col-span-1">
              <h2 class="text-2xl font-bold mb-4">Categories</h2>
              <ul class="space-y-2">
                <CategoryBtn category="Notes" subCategories={["Operating Systems", "Distributed Systems", "Compilers"]}></CategoryBtn>
                <CategoryBtn category="Thoughts"></CategoryBtn>
                <CategoryBtn category="Essays"></CategoryBtn>
              </ul>
            </div>
      
            <!-- Blog Posts Section -->
            <div class="col-span-3 space-y-8">
                {
                    blogEntry ? 
                        <p>{<blogEntry.Content/>}</p>
                    :
                        posts.map((post) => (
                            <PostButton title={post.data.title} description={post.data.description} href={post.slug}></PostButton>
                        ))
                }
            </div>


          </div>
        </div>
      </div>
</Layout>